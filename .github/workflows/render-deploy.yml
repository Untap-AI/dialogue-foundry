name: Render Deployment

on:
  # Trigger after packages are published to GitHub Package Registry
  workflow_run:
    workflows: ["Deploy Packages to S3"]
    types:
      - completed
    branches:
      - main
  
  # Allow manual deployment
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'smokebox'
        type: choice
        options:
          - smokebox
          - production
      version:
        description: 'Backend package version to deploy (for production)'
        required: false
        type: string

jobs:
  deploy_smokebox:
    name: Deploy to Test Environment
    runs-on: ubuntu-latest
    # Run this job if triggered automatically or manually for smokebox
    if: ${{ (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event.inputs.environment == 'smokebox' }}
    
    steps:
      - name: Deploy to Render Smokebox
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SMOKEBOX_ID }}
        run: |
          echo "Deploying to Smokebox environment..."
          
          # Trigger deployment using Render API
          DEPLOY_RESPONSE=$(curl -s -X POST \
            "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json")
          
          echo "Smokebox deployment triggered with response:"
          echo "$DEPLOY_RESPONSE" | jq . || echo "$DEPLOY_RESPONSE"
  
  deploy_production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    # Only run for manual deployments to production
    if: ${{ github.event.inputs.environment == 'production' }}
    
    # Manual approval required for production deployments
    environment:
      name: production
      url: https://dashboard.render.com
    
    steps:
      - name: Update Production Version & Deploy
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_PROD_ID }}
        run: |
          VERSION="${{ github.event.inputs.version }}"
          
          if [ -z "$VERSION" ]; then
            echo "No version specified. Using latest version."
            # Fetch the latest version from GitHub Packages if needed
            VERSION=$(npm view @dialogue-foundry/backend version --registry=https://npm.pkg.github.com/ 2>/dev/null || echo "latest")
            echo "Latest version is: $VERSION"
          else
            echo "Deploying version: $VERSION"
          fi
          
          # Always update the environment variable
          echo "Updating BACKEND_VERSION to $VERSION..."
          UPDATE_RESPONSE=$(curl -s -X PATCH \
            "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/env-vars" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d "{
              \"envVars\": [
                {
                  \"key\": \"BACKEND_VERSION\",
                  \"value\": \"$VERSION\"
                }
              ]
            }")
            
          echo "Environment variable updated with response:"
          echo "$UPDATE_RESPONSE" | jq . || echo "$UPDATE_RESPONSE"
          
          # Always trigger deployment
          echo "Triggering production deployment..."
          DEPLOY_RESPONSE=$(curl -s -X POST \
            "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json")
          
          echo "Production deployment triggered with response:"
          echo "$DEPLOY_RESPONSE" | jq . || echo "$DEPLOY_RESPONSE" 